# Generated by Django 4.2.5 on 2023-09-26 09:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('primary_country', models.CharField(blank=True, max_length=255, null=True)),
                ('primary_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('secondary_country', models.CharField(blank=True, max_length=255, null=True)),
                ('secondary_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('other_country', models.CharField(blank=True, max_length=255, null=True)),
                ('other_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('secondary_email', models.EmailField(max_length=254, unique=True)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('grand_father_name', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('marriage_date', models.DateField(blank=True, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=3, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Documents', models.CharField(choices=[('Adhar', 'Adhar'), ('Pancard', 'Pancard'), ('Driving Licence', 'Driving Licence')], max_length=50)),
                ('document_no', models.CharField(blank=True, max_length=15, null=True)),
                ('file', models.FileField(upload_to='doc/')),
                ('comment', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=50)),
                ('is_private', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('deceased', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relations', models.CharField(choices=[('mother', 'mother'), ('father', 'father'), ('daughter', 'daughter')], max_length=10)),
                ('relative', models.CharField(blank=True, max_length=50, null=True)),
                ('share_phone_number', models.CharField(blank=True, max_length=13, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('occupation_type', models.CharField(choices=[('job', 'job'), ('bussiness', 'bussiness')], max_length=9)),
                ('education', models.CharField(blank=True, max_length=255, null=True)),
                ('address_share_with', models.CharField(blank=True, max_length=255, null=True)),
                ('share_phone_number', models.CharField(blank=True, max_length=13, null=True)),
                ('address_type', models.CharField(choices=[('home', 'home'), ('office', 'office')], max_length=6)),
                ('address_1', models.CharField(blank=True, max_length=60, null=True)),
                ('address_2', models.CharField(blank=True, max_length=60, null=True)),
                ('address_3', models.CharField(blank=True, max_length=60, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('taluka', models.CharField(blank=True, max_length=50, null=True)),
                ('city_or_village', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.IntegerField(blank=True, null=True)),
                ('username', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(choices=[('gurukul', 'gurukul'), ('BMU', 'BMU'), ('vanita vishram', 'vanita vishram'), ('others', 'others')], max_length=15)),
                ('standard', models.CharField(blank=True, max_length=4, null=True)),
                ('ssc_gr_no', models.CharField(blank=True, max_length=15, null=True)),
                ('hostel', models.CharField(choices=[('Kaveri', 'Kaveri'), ('Tapi', 'Tapi'), ('Saraswati', 'Saraswati')], max_length=10)),
                ('hr_no', models.CharField(blank=True, max_length=15, null=True)),
                ('hsc_year', models.DateField()),
                ('ssc_year', models.DateField()),
                ('username', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
